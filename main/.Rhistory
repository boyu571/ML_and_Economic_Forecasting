if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
IP = data[-1,7]   # Industrial Production total
plot(log(IP))
plot(diff(log(IP)))  #산업생산 증가율, tcode와 일치
plot(tdata[,7])
head(tdata[,7])
head(diff(log(data[,7])))
head(diff(log(IP)))
head(tdata[,7])
fdata = tdata[228:742,]
head(fdata(,1))
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
View(fdata)
fdata = tdata[228:730,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
fdata = tdata[228:742,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
View(fdata)
complete.cases(fdata[,100:127])
complete.cases(fdata[,1:100])
complete.cases(fdata[,1:50])
complete.cases(fdata[,51:100])
complete.cases(fdata[,91:100])
complete.cases(fdata[,81:91])
complete.cases(fdata[,71:81])
complete.cases(fdata[,51:61])
complete.cases(fdata[,61:71])
complete.cases(fdata[,81:100])
View(fdata)
complete.cases(fdata[512:513,])
complete.cases(fdata[502:513,])
complete.cases(fdata[501:515,])
complete.cases(fdata[507:508,])
complete.cases(fdata[507:508,1:100])
complete.cases(fdata[507:508,1:10])
complete.cases(fdata[507:508,1:20])
complete.cases(fdata[507:508,1:50])
complete.cases(fdata[507:508,1:70])
complete.cases(fdata[507:508,1:90])
complete.cases(fdata[507:508,1:80])
complete.cases(fdata[507:508,70:80])
complete.cases(fdata[507:508,90:127])
View(fdata)
fdata[507:508,80:90]
fdata[507:508,70:90]
View(fdata)
fdata = tdata[228:730,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
Y = fdata[,2:127]
View(Y)
Y = cbind(fdata[,7],fdata[,c(-1,-7)]) # 산업생산지수 증가율을 y로 취급(첫번째 행)
mode(Y)
Y= as.matrix(Y)
mode(Y)
View(Y)
View(data)
#data = read.csv("2022-02.csv")
data = read.csv("2022-02-modified.csv")
tcode = data[1,]  # first element: Transformation code
tcode
data = data[-1,]  # Transfrom 라인 제거
tdata = data[-(1:2),]  #최초 2 observations 제거(이차 차분 고려)
for (i in 2:128){
if(tcode[i] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
IP = data[-1,7]   # Industrial Production total
plot(log(IP))
plot(diff(log(IP)))  #산업생산 증가율, tcode와 일치
plot(tdata[,7])
head(tdata[,7])
head(diff(log(IP)))
fdata = tdata[228:750,]
head(fdata[,1])
tail(fdata[,1])
fdata = tdata[228:752,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
Y = fdata[,2:127]
Y = cbind(fdata[,7],fdata[,c(-1,-7)]) # 산업생산지수 증가율을 y로 취급(첫번째 행)
mode(Y)
Y= as.matrix(Y)
mode(Y)
data = read.csv("2022-02.csv")
tcode = data[1,]  # first element: Transformation code
tcode
data = data[-1,]  # Transfrom 라인 제거
tdata = data[-(1:2),]  #최초 2 observations 제거(이차 차분 고려)
for (i in 2:128){
if(tcode[i] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
IP = data[-1,7]   # Industrial Production total
plot(log(IP))
plot(diff(log(IP)))  #산업생산 증가율, tcode와 일치
plot(tdata[,7])
head(tdata[,7])
head(diff(log(IP)))
fdata = tdata[228:752,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
Y = fdata[,2:127]
Y = cbind(fdata[,7],fdata[,c(-1,-7)]) # 산업생산지수 증가율을 y로 취급(첫번째 행)
mode(Y)
Y= as.matrix(Y)
mode(Y)
#data = read.csv("2022-02.csv")
data = read.csv("2022-02-modified.csv")
tcode = data[1,]  # first element: Transformation code
tcode
data = data[-1,]  # Transfrom 라인 제거
tdata = data[-(1:2),]  #최초 2 observations 제거(이차 차분 고려)
for (i in 2:128){
if(tcode[i] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
fdata = tdata[228:752,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
View(fdata)
Y = fdata[,2:127]
fdata[,end]
fdata[,end-1:end]
Y = fdata[,2:127]
View(Y)
Y = cbind(fdata[,84],fdata[,c(-1,-84)]) # 산업생산지수 증가율을 y로 취급(첫번째 행)
View(Y)
Y = fdata[,2:127]
Y = cbind(fdata[,84],fdata[,c(-1,-84)]) # 산업생산지수 증가율을 y로 취급(첫번째 행)
Y1 = cbind(fdata[,84],fdata[,c(-84)])
View(Y)
View(Y1)
#data = read.csv("2022-02.csv")
data = read.csv("2022-02-modified.csv")
tcode = data[1,]  # first element: Transformation code
tcode
data = data[-1,]  # Transfrom 라인 제거
tdata = data[-(1:2),]  #최초 2 observations 제거(이차 차분 고려)
for (i in 2:128){
if(tcode[i] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
ncol(data)
ncol(data)
for (i in 2:ncol(data)){
if(tcode[i] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
fdata = tdata[228:752,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
Y = cbind(fdata[,84],fdata[,c(-1,-84)]) # 산업생산지수 증가율을 y로 취급(첫번째 행)
View(Y)
data = data[-1,]  # Transfrom 라인 제거
tdata = data[-(1:2),]  #최초 2 observations 제거(이차 차분 고려)
Y = cbind(tdata[,84],tdata[,-84]) # 산업생산지수 증가율을 y로 취급(첫번째 행)
View(Y)
Y = cbind(data[,84],data[,-84]) # 산업생산지수 증가율을 y로 취급(첫번째 행)
View(Y)
#data = read.csv("2022-02.csv")
data = read.csv("2022-02-modified.csv")
tcode = data[1,]  # first element: Transformation code
tcode
data = data[-1,]  # Transfrom 라인 제거
tdata = data[-(1:2),]  #최초 2 observations 제거(이차 차분 고려)
ncol(data)
for (i in 2:ncol(data)){
if(tcode[i] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
fdata = tdata[228:752,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
Y = cbind(fdata[,84],fdata[,c(-1,-84)]) # GS10 미국 국채 10년 금리를 y로 취급(첫번째 행)
mode(Y)
Y= as.matrix(Y)
mode(Y)
Y1=Y
#data = read.csv("2022-02.csv")
data = read.csv("2022-02-modified.csv")
tcode = data[1,]  # first element: Transformation code
tcode
data = data[-1,]  # Transfrom 라인 제거
ncol(data)
for (i in 2:ncol(data)){
if(tcode[i] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
fdata = tdata[228:752,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
Y = cbind(fdata[,84],fdata[,c(-1,-84)]) # GS10 미국 국채 10년 금리를 y로 취급(첫번째 행)
mode(Y)
Y= as.matrix(Y)
mode(Y)
Y-Y1
View(Y1)
View(Y)
data("fredmd_description")
library(fbi)
data("fredmd_description")
## Transformation하지 않은 FRED-MD loading
data = fredmd(file = "2016-01.csv", date_start = NULL, date_end = NULL, transform = FALSE)
tcode = fredmd_description[,2]
tcode
for (i in 2:136){
if(tcode[i-1] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i-1] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i-1] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i-1] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i-1] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i-1] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
tdata = data[-(1:2),]   #log후 2차 차분도 있기 때문에 맞추려고
for (i in 2:136){
if(tcode[i-1] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i-1] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i-1] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i-1] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i-1] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i-1] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
dir()
data = read.csv("2022-02-modified.csv")
#2020 April, CP3Mx (3-Month AA Financial Commercial Paper Rate), COMPAPFFx (3-Month Commercial Paper Minus FEDFUNDS) missing, linear interpolate (3월과 5월 자료의 평균으로 대체)
tcode = data[1,]  # first element: Transformation code
tcode
### Transformation
data = data[-1,]  # Transfrom 라인 제거
tdata = data[-(1:2),]  #최초 2 observations 제거(이차 차분 고려)
#head(tdata[,1:5])
ncol(data)
for (i in 2:ncol(data)){
if(tcode[i] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
#########
#1978년 2월부터 2021년 10월까지 자료 사용, missing value 없는 자료를 원함.
fdata = tdata[228:752,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
Y = cbind(fdata[,84],fdata[,c(-1,-84)]) # GS10 미국 국채 10년 금리를 y로 취급(첫번째 행)
mode(Y)
Y= as.matrix(Y)
mode(Y)
plot(Y[],1])
plot(Y[,1])
View(Y)
data = read.csv("2022-02-modified.csv")
#2020 April, CP3Mx (3-Month AA Financial Commercial Paper Rate), COMPAPFFx (3-Month Commercial Paper Minus FEDFUNDS) missing, linear interpolate (3월과 5월 자료의 평균으로 대체)
tcode = data[1,]  # first element: Transformation code
tcode
### Transformation
data = data[-1,]  # Transfrom 라인 제거
tdata = data[-(1:2),]  #최초 2 observations 제거(이차 차분 고려)
#head(tdata[,1:5])
ncol(data)
for (i in 2:ncol(data)){
if(tcode[i] == 1){
tdata[,i] <- data[-(1:2),i]
} # no transformation
if(tcode[i] == 2){
tdata[,i] <- diff(data[-1,i])
} # 1차 차분
# tdoce ==3(2차 차분)에 해당하는 데이터는 없음
if(tcode[i] == 4){
tdata[,i] <- log(data[-(1:2),i])
} # log
if(tcode[i] == 5){
tdata[,i] <- diff(log(data[-1,i]))
} # log differencing
if(tcode[i] == 6){
tdata[,i] <- diff(diff(log(data[,i])))
} # log취한 뒤 2차 차분
if(tcode[i] == 7){
tdata[,i] <- diff(data[-1,i]/data[1:(nrow(data)-1),i])
} # 증가율의 1차 차분
}
IP = data[,7]   # Industrial Production total
plot(log(IP))
plot(diff(log(IP)))  #산업생산 증가율, tcode와 일치
plot(tdata[,7])
plot(diff(log(IP)))  #산업생산 증가율, tcode와 일치
plot(tdata[,7])
diff(log(IP))-tdata[,7]
IP = data[-1,7]   # Industrial Production total
plot(log(IP))
plot(diff(log(IP)))  #산업생산 증가율, tcode와 일치
plot(tdata[,7])
diff(log(IP))-tdata[,7]
fdata = tdata[228:752,]
head(fdata[,1])
tail(fdata[,1])
complete.cases(fdata[,59])  # missing values in ACOGNO
fdata = fdata[,-59] # ACOGNO 제거
complete.cases(fdata)
Y = cbind(fdata[,84],fdata[,c(-1,-84)]) # GS10 미국 국채 10년 금리를 y로 취급(첫번째 행)
Y = cbind(fdata[,7],fdata[,c(-1,-7)]) # 산업생산지수 증가율을 y로 취급(첫번째 행)
View(Y)
mode(Y)
Y= as.matrix(Y)
mode(Y)
plot(tdata[,7])
# Number of Forecasts
npred=132
i = nprev  #아래 for loop를 막고, i=nprev를 try해 본 후 loop를 돌려볼 것
nprev=132
i = nprev  #아래 for loop를 막고, i=nprev를 try해 본 후 loop를 돌려볼 것
1+nprev-i
?baggit
